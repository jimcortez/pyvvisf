[build-system]
requires = [
    "setuptools>=61.0", 
    "wheel", 
    "pybind11>=2.6.0",
    "setuptools_scm[toml]>=6.2",
    "ninja>=1.10.0"
]
build-backend = "setuptools.build_meta"

[project]
name = "pyvvisf"
dynamic = ["version"]
description = "Python bindings for VVISF (Vidvox Interactive Shader Format) using pybind11"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Jim Cortez", email = "gitstuff@jimcortez.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "pillow>=9.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "cibuildwheel>=3.0.0",
    "build>=0.10.0",
]

[project.urls]
Homepage = "https://github.com/jimcortez/pyvvisf"
Repository = "https://github.com/jimcortez/pyvvisf"
Documentation = "https://github.com/jimcortez/pyvvisf#readme"
Issues = "https://github.com/jimcortez/pyvvisf/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
write_to = "src/pyvvisf/_version.py"

[tool.cibuildwheel]
# Build for multiple platforms
build = ["cp38-*", "cp39-*", "cp310-*", "cp311-*", "cp312-*"]
skip = ["*-musllinux*"]  # Skip musl builds for now

[tool.cibuildwheel.linux]
before-all = "scripts/install_dependencies.sh"
environment = { VVISF_BUILD_TYPE = "wheel" }

[tool.cibuildwheel.macos]
before-all = "scripts/install_dependencies.sh"
environment = { VVISF_BUILD_TYPE = "wheel" }

[tool.cibuildwheel.windows]
before-all = "scripts/install_dependencies.bat"
environment = { VVISF_BUILD_TYPE = "wheel" }

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=pyvvisf",
    "--cov-report=term-missing",
    "--cov-report=html",
] 