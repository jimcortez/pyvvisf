name: Build wheels

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"

    - name: Install cibuildwheel
      run: |
        python -m pip install --upgrade pip
        pip install cibuildwheel

    - name: Build wheels
      env:
        CIBW_BEFORE_ALL: scripts/install_dependencies.sh
        CIBW_ENVIRONMENT: VVISF_BUILD_TYPE=wheel
        CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
        CIBW_SKIP: "*-musllinux*"
        CIBW_ARCHS: "auto"
        # Architecture-specific settings
        CIBW_MACOS_ARCHS: "x86_64 arm64 universal2"
        CIBW_LINUX_ARCHS: "x86_64 aarch64"
        CIBW_WINDOWS_ARCHS: "x64"
      run: |
        python -m cibuildwheel --platform auto --output-dir wheelhouse

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: wheelhouse/

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build source distribution
      run: python -m build --sdist

    - name: Upload source distribution
      uses: actions/upload-artifact@v3
      with:
        name: sdist
        path: dist/*.tar.gz

  upload-to-pypi:
    name: Upload to PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: wheelhouse/ 